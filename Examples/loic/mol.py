import sys
sys.path.insert(0, '../../')


import Task

from Task  import autochem
import time

mol = [(6,(  0.3741597775 ,-1.1515375979 , 0.5443101210)),
(6,( -0.9795938330 ,-0.7117070935 , 0.5443323300)),
(6,( -0.9795816267 , 0.7117122913 , 0.5443295071)),
(6,(  0.3741674655 , 1.1515582312 , 0.5443474137)),
(6,(  1.2108597017 , 0.0000038285 , 0.5443972555)),
(6,(  0.7675167561 ,-2.3621142514 , 0.0628406263)),
(6,( -2.0093789671 ,-1.4598887643 , 0.0629151294)),
(6,( -2.0093998640 , 1.4598604960 , 0.0628951408)),
(6,(  0.7675119147 , 2.3621334718 , 0.0628708949)),
(6,(  2.4837225394 , 0.0000273040 , 0.0629242549)),
(6,( -0.3420704793 , 3.2576513099 ,-0.2614879314)),
(6,(  2.9925825492 , 1.3320310762 ,-0.2613700584)),
(6,(  2.1915782577 ,-2.4344503280 ,-0.2614603288)),
(6,( -1.6380926894 ,-2.8365826465 ,-0.2614465489)),
(6,( -3.2039772715 ,-0.6813792882 ,-0.2614026662)),
(6,( -0.3420720145 ,-3.2576381096 ,-0.2614723342)),
(6,(  2.9925357726 ,-1.3319821199 ,-0.2613949163)),
(6,(  2.1915727453 , 2.4344651645 ,-0.2614045116)),
(6,( -1.6380616486 , 2.8365266673 ,-0.2615153154)),
(6,( -3.2039977984 , 0.6813315930 ,-0.2614232883)),
(1,( -0.1225897467 , 4.2689825759 ,-0.5849074241)),
(1,(  4.0222521275 , 1.4358510087 ,-0.5846804678)),
(1,(  2.6084527495 ,-3.3816550801 ,-0.5848107616)),
(1,( -2.4100687130 ,-3.5258164095 ,-0.5847714295)),
(1,( -4.0980669056 ,-1.2025630314 ,-0.5847010560)),
(1,( -0.1226087165 ,-4.2689881125 ,-0.5848796271)),
(1,(  4.0222045834 ,-1.4358550382 ,-0.5847303812)),
(1,(  2.6084929293 , 3.3816641982 ,-0.5847355858)),
(1,( -2.4100288852 , 3.5257433878 ,-0.5849149882)),
(1,( -4.0980201499 , 1.2026152678 ,-0.5847282526))]



basis={    6:[    ('S',
    [(27.38503303 , 0.430128498),
    (4.874522052 , 0.678913531)])
      ,    ('S',
    [(1.136748189 , 0.049471769),
    (0.288309360 , 0.963782408)])
      ,    ('P',
    [(1.136748189 , 0.511540708),
    (0.288309360 , 0.612819896)])
      ],
    1:[    ('S',
    [(1.309756377 , 0.430128498),
    (0.233135974 , 0.678913531)])
      ]}

t0 = time.clock()
tasks = ['Energy']
argnum = [[],[0],[1],[0],[1],[0],[1],[0],[1]]
name = 'mol-sto-2g'
ne = 250
autochem(tasks,        ## Tasks
         mol,          ## Geometry
         basis,   ## Basis set (if shifted it should have the coordinates too)
         ne/2,          ## Number of electrons
         shifted=False,      ## If the basis is going to be on the atoms coordinates
         name=name,   ## Prefix for all optput files
         verbose=True,       ## If there is going to be an output
         readguess=True,    ## If the optimization will use an initial guess of C
         argnum=argnum,## Order of optimizations ([], for energy)
         maxiter=5)         ## Maximum number of steps in the optimization
print time.clock()-t0,"seconds process time"
